[{"E:\\UIComponent\\lit-element-demo\\react-pro\\src\\index.js":"1","E:\\UIComponent\\lit-element-demo\\react-pro\\src\\App.js":"2","E:\\UIComponent\\lit-element-demo\\react-pro\\src\\BtnExample.js":"3","E:\\UIComponent\\lit-element-demo\\react-pro\\src\\CheckExample.js":"4"},{"size":239,"mtime":1611280138395,"results":"5","hashOfConfig":"6"},{"size":438,"mtime":1611718941735,"results":"7","hashOfConfig":"6"},{"size":1572,"mtime":1611716240111,"results":"8","hashOfConfig":"6"},{"size":685,"mtime":1611713303225,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"j63cz8",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"12"},"E:\\UIComponent\\lit-element-demo\\react-pro\\src\\index.js",[],["22","23"],"E:\\UIComponent\\lit-element-demo\\react-pro\\src\\App.js",[],"E:\\UIComponent\\lit-element-demo\\react-pro\\src\\BtnExample.js",["24","25"],"import { useState, useRef, useEffect } from 'react'\r\n\r\n\r\nfunction BtnExample() {\r\n\tconst btnRef = useRef(null)\r\n\r\n\tconst [count, setCount] = useState(0)\r\n\r\n\tconst handleClick = (event) => {\r\n\t\tsetCount(count + 1)\r\n\t\tconsole.log(event)\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tbtnRef.current.addEventListener('litClick', handleClick)\r\n\t\tconsole.log(btnRef)\r\n\r\n\t\treturn () => {\r\n\t\t\tbtnRef.current.removeEventListener('litClick', handleClick)\r\n\t\t}\r\n\t}, [count])\r\n\r\n\tconst renderData = () => {\r\n\t\tlet data = []\r\n\t\tfor (let i = 0; i < 500; i++) {\r\n\t\t\tconst component = (\r\n\t\t\t\t<div key={`${i}-0`} className={\"item\"}>\r\n\t\t\t\t\t<lit-button key={`${i}-1`} class={\"btn\"}>按钮1</lit-button>\r\n\t\t\t\t\t<lit-button key={`${i}-2`} class={\"btn\"}>按钮2</lit-button>\r\n\t\t\t\t\t<lit-button key={`${i}-3`} class={\"btn\"}>按钮3</lit-button>\r\n\t\t\t\t\t<lit-button key={`${i}-4`} class={\"btn\"}>按钮4</lit-button>\r\n\t\t\t\t\t<lit-button key={`${i}-5`} class={\"btn\"}>按钮5</lit-button>\r\n\t\t\t\t\t{/* <button key={`${i}-1`} class={\"btn-origin\"}>按钮1</button>\r\n\t\t\t\t\t<button key={`${i}-2`} class={\"btn-origin\"}>按钮2</button>\r\n\t\t\t\t\t<button key={`${i}-3`} class={\"btn-origin\"}>按钮3</button>\r\n\t\t\t\t\t<button key={`${i}-4`} class={\"btn-origin\"}>按钮4</button>\r\n\t\t\t\t\t<button key={`${i}-5`} class={\"btn-origin\"}>按钮5</button> */}\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t\tdata = [...data, component]\r\n\t\t}\r\n\r\n\t\treturn data\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"item\">\r\n\t\t\t<div>\r\n\t\t\t\t<p>点击次数：{count}</p>\r\n\t\t\t\t<lit-button ref={btnRef}>点击</lit-button>\r\n\t\t\t\t{renderData()}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default BtnExample;\r\n",["26","27"],"E:\\UIComponent\\lit-element-demo\\react-pro\\src\\CheckExample.js",["28","29"],"import { useState, useRef, useEffect } from 'react'\r\n\r\nfunction CheckExample() {\r\n\tconst checkRef = useRef(null)\r\n\r\n\tconst check = ({ detail }) => {\r\n\t\tconsole.log('checked', detail.checked)\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tcheckRef.current.addEventListener('litClick', check)\r\n\t\tconsole.log(checkRef)\r\n\r\n\t\treturn () => {\r\n\t\t\tcheckRef.current.removeEventListener('litClick', check)\r\n\t\t}\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<div className=\"item\">\r\n\t\t\t<div>\r\n\t\t\t\t基本用法：\r\n        \t\t<lit-checkbox ref={checkRef}>sdsdff</lit-checkbox>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t禁用：\r\n        \t\t<lit-checkbox disabled={true}>sdsdff</lit-checkbox>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default CheckExample;\r\n",{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":19,"column":11,"nodeType":"36","endLine":19,"endColumn":18},{"ruleId":"34","severity":1,"message":"37","line":21,"column":5,"nodeType":"38","endLine":21,"endColumn":12,"suggestions":"39"},{"ruleId":"30","replacedBy":"40"},{"ruleId":"32","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":1,"column":10,"nodeType":"36","messageId":"44","endLine":1,"endColumn":18},{"ruleId":"34","severity":1,"message":"45","line":15,"column":13,"nodeType":"36","endLine":15,"endColumn":20},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"react-hooks/exhaustive-deps","The ref value 'btnRef.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'btnRef.current' to a variable inside the effect, and use that variable in the cleanup function.","Identifier","React Hook useEffect has a missing dependency: 'handleClick'. Either include it or remove the dependency array.","ArrayExpression",["48"],["46"],["47"],"no-unused-vars","'useState' is defined but never used.","unusedVar","The ref value 'checkRef.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'checkRef.current' to a variable inside the effect, and use that variable in the cleanup function.","no-global-assign","no-unsafe-negation",{"desc":"49","fix":"50"},"Update the dependencies array to be: [count, handleClick]",{"range":"51","text":"52"},[438,445],"[count, handleClick]"]